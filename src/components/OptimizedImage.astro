---
export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  priority?: boolean;
  className?: string;
  sizes?: string;
  quality?: number;
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  loading = 'lazy',
  priority = false,
  className = '',
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw',
  quality = 80
} = Astro.props;

// Generar srcset para diferentes tamaÃ±os
const generateSrcSet = (baseSrc: string) => {
  const sizes = [400, 800, 1200, 1600];
  return sizes.map(size => `${baseSrc}?w=${size}&q=${quality} ${size}w`).join(', ');
};

const srcSet = generateSrcSet(src);
---

<picture class={`optimized-image ${className}`}>
  <!-- WebP format for modern browsers -->
  <source 
    srcset={generateSrcSet(src.replace(/\.(jpg|jpeg|png)$/, '.webp'))}
    type="image/webp"
    sizes={sizes}
  />
  
  <!-- Fallback for older browsers -->
  <img
    src={src}
    srcset={srcSet}
    alt={alt}
    width={width}
    height={height}
    loading={priority ? 'eager' : loading}
    decoding={priority ? 'sync' : 'async'}
    sizes={sizes}
    class={`w-full h-auto transition-opacity duration-300 ${priority ? 'opacity-100' : 'opacity-0'}`}
    onload="this.style.opacity = '1'"
    onerror="this.style.opacity = '1'; this.src = '/images/placeholder.jpg'"
  />
</picture>

<style>
  .optimized-image {
    position: relative;
    overflow: hidden;
  }
  
  .optimized-image img {
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .optimized-image:hover img {
    transform: scale(1.05);
  }
  
  /* Skeleton loading effect */
  .optimized-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    z-index: 1;
  }
  
  .optimized-image img[style*="opacity: 1"] + * {
    display: none;
  }
  
  @keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
  }
  
  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .optimized-image::before {
      background: linear-gradient(90deg, #2a2a2a 25%, #3a3a3a 50%, #2a2a2a 75%);
      background-size: 200% 100%;
    }
  }
</style>
