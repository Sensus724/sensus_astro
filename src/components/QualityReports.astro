---
export interface Props {
  class?: string;
  showFilters?: boolean;
  showExport?: boolean;
  showSchedule?: boolean;
}

const {
  class: className = '',
  showFilters = true,
  showExport = true,
  showSchedule = true,
  ...rest
} = Astro.props;

const classes = [
  'quality-reports',
  className
].filter(Boolean).join(' ');
---

<div class={classes} {...rest}>
  <!-- Header de reportes -->
  <div class="quality-reports-header">
    <h2 class="quality-reports-title">
      <i class="fas fa-chart-bar"></i>
      Reportes de Calidad
    </h2>
    
    <div class="quality-reports-controls">
      <button class="quality-reports-btn" id="generate-report">
        <i class="fas fa-plus"></i>
        Generar Reporte
      </button>
      <button class="quality-reports-btn" id="schedule-report">
        <i class="fas fa-clock"></i>
        Programar
      </button>
      <button class="quality-reports-btn" id="export-reports">
        <i class="fas fa-download"></i>
        Exportar
      </button>
    </div>
  </div>

  <!-- Filtros -->
  {showFilters && (
    <div class="quality-reports-filters">
      <h3 class="quality-reports-section-title">Filtros</h3>
      <div class="quality-reports-filters-grid">
        <div class="quality-reports-filter-item">
          <label class="quality-reports-filter-label">
            <span class="quality-reports-filter-text">Período</span>
            <select id="report-period" class="quality-reports-filter-select">
              <option value="today">Hoy</option>
              <option value="week">Esta semana</option>
              <option value="month" selected>Este mes</option>
              <option value="quarter">Este trimestre</option>
              <option value="year">Este año</option>
              <option value="custom">Personalizado</option>
            </select>
          </label>
        </div>
        
        <div class="quality-reports-filter-item">
          <label class="quality-reports-filter-label">
            <span class="quality-reports-filter-text">Tipo de reporte</span>
            <select id="report-type" class="quality-reports-filter-select">
              <option value="all">Todos</option>
              <option value="quality">Calidad</option>
              <option value="security">Seguridad</option>
              <option value="performance">Rendimiento</option>
              <option value="accessibility">Accesibilidad</option>
              <option value="seo">SEO</option>
            </select>
          </label>
        </div>
        
        <div class="quality-reports-filter-item">
          <label class="quality-reports-filter-label">
            <span class="quality-reports-filter-text">Formato</span>
            <select id="report-format" class="quality-reports-filter-select">
              <option value="html" selected>HTML</option>
              <option value="pdf">PDF</option>
              <option value="json">JSON</option>
              <option value="csv">CSV</option>
            </select>
          </label>
        </div>
        
        <div class="quality-reports-filter-item">
          <label class="quality-reports-filter-label">
            <span class="quality-reports-filter-text">Estado</span>
            <select id="report-status" class="quality-reports-filter-select">
              <option value="all">Todos</option>
              <option value="completed">Completados</option>
              <option value="pending">Pendientes</option>
              <option value="failed">Fallidos</option>
            </select>
          </label>
        </div>
        
        <div class="quality-reports-filter-item">
          <label class="quality-reports-filter-label">
            <span class="quality-reports-filter-text">Buscar</span>
            <input type="text" id="report-search" class="quality-reports-filter-input" placeholder="Buscar reportes...">
          </label>
        </div>
        
        <div class="quality-reports-filter-item">
          <button class="quality-reports-filter-btn" id="apply-filters">
            <i class="fas fa-filter"></i>
            Aplicar Filtros
          </button>
        </div>
      </div>
    </div>
  )}

  <!-- Lista de reportes -->
  <div class="quality-reports-list">
    <h3 class="quality-reports-section-title">Reportes Generados</h3>
    <div class="quality-reports-table">
      <div class="quality-reports-table-header">
        <div class="quality-reports-table-cell">Nombre</div>
        <div class="quality-reports-table-cell">Tipo</div>
        <div class="quality-reports-table-cell">Fecha</div>
        <div class="quality-reports-table-cell">Estado</div>
        <div class="quality-reports-table-cell">Puntuación</div>
        <div class="quality-reports-table-cell">Acciones</div>
      </div>
      
      <div class="quality-reports-table-body" id="reports-table-body">
        <!-- Reportes se cargarán dinámicamente -->
      </div>
    </div>
  </div>

  <!-- Programación de reportes -->
  {showSchedule && (
    <div class="quality-reports-schedule">
      <h3 class="quality-reports-section-title">Reportes Programados</h3>
      <div class="quality-reports-schedule-list" id="scheduled-reports">
        <!-- Reportes programados se cargarán dinámicamente -->
      </div>
    </div>
  )}

  <!-- Estadísticas de reportes -->
  <div class="quality-reports-stats">
    <h3 class="quality-reports-section-title">Estadísticas</h3>
    <div class="quality-reports-stats-grid">
      <div class="quality-reports-stat-item">
        <div class="quality-reports-stat-icon">
          <i class="fas fa-file-alt"></i>
        </div>
        <div class="quality-reports-stat-content">
          <div class="quality-reports-stat-value" id="total-reports">0</div>
          <div class="quality-reports-stat-label">Total Reportes</div>
        </div>
      </div>
      
      <div class="quality-reports-stat-item">
        <div class="quality-reports-stat-icon">
          <i class="fas fa-check-circle"></i>
        </div>
        <div class="quality-reports-stat-content">
          <div class="quality-reports-stat-value" id="completed-reports">0</div>
          <div class="quality-reports-stat-label">Completados</div>
        </div>
      </div>
      
      <div class="quality-reports-stat-item">
        <div class="quality-reports-stat-icon">
          <i class="fas fa-clock"></i>
        </div>
        <div class="quality-reports-stat-content">
          <div class="quality-reports-stat-value" id="pending-reports">0</div>
          <div class="quality-reports-stat-label">Pendientes</div>
        </div>
      </div>
      
      <div class="quality-reports-stat-item">
        <div class="quality-reports-stat-icon">
          <i class="fas fa-times-circle"></i>
        </div>
        <div class="quality-reports-stat-content">
          <div class="quality-reports-stat-value" id="failed-reports">0</div>
          <div class="quality-reports-stat-label">Fallidos</div>
        </div>
      </div>
      
      <div class="quality-reports-stat-item">
        <div class="quality-reports-stat-icon">
          <i class="fas fa-calendar"></i>
        </div>
        <div class="quality-reports-stat-content">
          <div class="quality-reports-stat-value" id="scheduled-reports-count">0</div>
          <div class="quality-reports-stat-label">Programados</div>
        </div>
      </div>
      
      <div class="quality-reports-stat-item">
        <div class="quality-reports-stat-icon">
          <i class="fas fa-chart-line"></i>
        </div>
        <div class="quality-reports-stat-content">
          <div class="quality-reports-stat-value" id="average-score">0</div>
          <div class="quality-reports-stat-label">Puntuación Promedio</div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal de generación de reporte -->
  <div class="quality-reports-modal" id="report-modal">
    <div class="quality-reports-modal-content">
      <div class="quality-reports-modal-header">
        <h3 class="quality-reports-modal-title">Generar Reporte</h3>
        <button class="quality-reports-modal-close" id="close-report-modal">
          <i class="fas fa-times"></i>
        </button>
      </div>
      
      <div class="quality-reports-modal-body">
        <div class="quality-reports-form">
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Nombre del reporte</span>
              <input type="text" id="report-name" class="quality-reports-form-input" placeholder="Reporte de calidad - Enero 2024">
            </label>
          </div>
          
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Tipo de reporte</span>
              <select id="modal-report-type" class="quality-reports-form-select">
                <option value="quality">Calidad General</option>
                <option value="security">Seguridad</option>
                <option value="performance">Rendimiento</option>
                <option value="accessibility">Accesibilidad</option>
                <option value="seo">SEO</option>
                <option value="comprehensive">Exhaustivo</option>
              </select>
            </label>
          </div>
          
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Período</span>
              <select id="modal-report-period" class="quality-reports-form-select">
                <option value="today">Hoy</option>
                <option value="week">Esta semana</option>
                <option value="month" selected>Este mes</option>
                <option value="quarter">Este trimestre</option>
                <option value="year">Este año</option>
              </select>
            </label>
          </div>
          
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Formato</span>
              <select id="modal-report-format" class="quality-reports-form-select">
                <option value="html" selected>HTML</option>
                <option value="pdf">PDF</option>
                <option value="json">JSON</option>
                <option value="csv">CSV</option>
              </select>
            </label>
          </div>
          
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Incluir</span>
              <div class="quality-reports-form-checkboxes">
                <label class="quality-reports-form-checkbox">
                  <input type="checkbox" id="include-metrics" checked>
                  <span class="quality-reports-form-checkbox-text">Métricas</span>
                </label>
                <label class="quality-reports-form-checkbox">
                  <input type="checkbox" id="include-issues" checked>
                  <span class="quality-reports-form-checkbox-text">Problemas</span>
                </label>
                <label class="quality-reports-form-checkbox">
                  <input type="checkbox" id="include-recommendations" checked>
                  <span class="quality-reports-form-checkbox-text">Recomendaciones</span>
                </label>
                <label class="quality-reports-form-checkbox">
                  <input type="checkbox" id="include-trends" checked>
                  <span class="quality-reports-form-checkbox-text">Tendencias</span>
                </label>
              </div>
            </label>
          </div>
          
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Destino</span>
              <select id="modal-report-destination" class="quality-reports-form-select">
                <option value="local">Local</option>
                <option value="email">Email</option>
                <option value="slack">Slack</option>
                <option value="webhook">Webhook</option>
              </select>
            </label>
          </div>
          
          <div class="quality-reports-form-group">
            <label class="quality-reports-form-label">
              <span class="quality-reports-form-text">Email (opcional)</span>
              <input type="email" id="modal-report-email" class="quality-reports-form-input" placeholder="reportes@empresa.com">
            </label>
          </div>
        </div>
      </div>
      
      <div class="quality-reports-modal-footer">
        <button class="quality-reports-modal-btn quality-reports-modal-btn-secondary" id="cancel-report">
          Cancelar
        </button>
        <button class="quality-reports-modal-btn quality-reports-modal-btn-primary" id="generate-report-btn">
          Generar Reporte
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .quality-reports {
    @apply bg-white rounded-xl shadow-lg p-6 space-y-6;
  }

  /* Header */
  .quality-reports-header {
    @apply flex items-center justify-between pb-4 border-b border-gray-200;
  }

  .quality-reports-title {
    @apply text-2xl font-bold text-gray-900 flex items-center gap-3;
  }

  .quality-reports-controls {
    @apply flex gap-2;
  }

  .quality-reports-btn {
    @apply px-4 py-2 bg-blue-600 text-white rounded-lg;
    @apply hover:bg-blue-700 transition-colors duration-200;
    @apply flex items-center gap-2 text-sm font-medium;
  }

  /* Filtros */
  .quality-reports-filters {
    @apply space-y-4;
  }

  .quality-reports-section-title {
    @apply text-lg font-semibold text-gray-900;
  }

  .quality-reports-filters-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4;
  }

  .quality-reports-filter-item {
    @apply space-y-2;
  }

  .quality-reports-filter-label {
    @apply flex flex-col gap-2;
  }

  .quality-reports-filter-text {
    @apply text-sm font-medium text-gray-700;
  }

  .quality-reports-filter-select {
    @apply w-full px-3 py-2 border border-gray-300 rounded-lg;
    @apply focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;
    @apply transition-colors duration-200;
  }

  .quality-reports-filter-input {
    @apply w-full px-3 py-2 border border-gray-300 rounded-lg;
    @apply focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;
    @apply transition-colors duration-200;
  }

  .quality-reports-filter-btn {
    @apply w-full px-4 py-2 bg-green-600 text-white rounded-lg;
    @apply hover:bg-green-700 transition-colors duration-200;
    @apply flex items-center justify-center gap-2 text-sm font-medium;
  }

  /* Tabla de reportes */
  .quality-reports-table {
    @apply bg-gray-50 rounded-lg overflow-hidden;
  }

  .quality-reports-table-header {
    @apply bg-gray-100 grid grid-cols-6 gap-4 p-4 font-medium text-gray-700;
  }

  .quality-reports-table-body {
    @apply space-y-2 p-4;
  }

  .quality-reports-table-row {
    @apply bg-white rounded-lg p-4 grid grid-cols-6 gap-4 items-center;
    @apply hover:shadow-md transition-shadow duration-200;
  }

  .quality-reports-table-cell {
    @apply text-sm;
  }

  .quality-reports-table-cell:first-child {
    @apply font-medium text-gray-900;
  }

  .quality-reports-table-cell:last-child {
    @apply flex gap-2;
  }

  .quality-reports-table-action {
    @apply px-3 py-1 text-xs rounded;
    @apply transition-colors duration-200;
  }

  .quality-reports-table-action.view {
    @apply bg-blue-100 text-blue-800 hover:bg-blue-200;
  }

  .quality-reports-table-action.download {
    @apply bg-green-100 text-green-800 hover:bg-green-200;
  }

  .quality-reports-table-action.delete {
    @apply bg-red-100 text-red-800 hover:bg-red-200;
  }

  /* Estado de reporte */
  .quality-reports-status {
    @apply px-2 py-1 rounded-full text-xs font-medium;
  }

  .quality-reports-status.completed {
    @apply bg-green-100 text-green-800;
  }

  .quality-reports-status.pending {
    @apply bg-yellow-100 text-yellow-800;
  }

  .quality-reports-status.failed {
    @apply bg-red-100 text-red-800;
  }

  /* Programación de reportes */
  .quality-reports-schedule-list {
    @apply space-y-3;
  }

  .quality-reports-schedule-item {
    @apply bg-gray-50 rounded-lg p-4 flex items-center justify-between;
  }

  .quality-reports-schedule-info {
    @apply flex-1;
  }

  .quality-reports-schedule-name {
    @apply font-medium text-gray-900;
  }

  .quality-reports-schedule-details {
    @apply text-sm text-gray-600 mt-1;
  }

  .quality-reports-schedule-actions {
    @apply flex gap-2;
  }

  .quality-reports-schedule-btn {
    @apply px-3 py-1 text-xs rounded;
    @apply transition-colors duration-200;
  }

  .quality-reports-schedule-btn.edit {
    @apply bg-blue-100 text-blue-800 hover:bg-blue-200;
  }

  .quality-reports-schedule-btn.delete {
    @apply bg-red-100 text-red-800 hover:bg-red-200;
  }

  /* Estadísticas */
  .quality-reports-stats-grid {
    @apply grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4;
  }

  .quality-reports-stat-item {
    @apply bg-gray-50 rounded-lg p-4 text-center;
  }

  .quality-reports-stat-icon {
    @apply w-8 h-8 bg-blue-100 text-blue-600 rounded-lg;
    @apply flex items-center justify-center mx-auto mb-2;
  }

  .quality-reports-stat-value {
    @apply text-lg font-bold text-gray-900 mb-1;
  }

  .quality-reports-stat-label {
    @apply text-sm text-gray-600;
  }

  /* Modal */
  .quality-reports-modal {
    @apply fixed inset-0 bg-black bg-opacity-50 hidden;
    @apply flex items-center justify-center z-50;
  }

  .quality-reports-modal-content {
    @apply bg-white rounded-xl shadow-xl max-w-2xl w-full mx-4;
  }

  .quality-reports-modal-header {
    @apply flex items-center justify-between p-6 border-b border-gray-200;
  }

  .quality-reports-modal-title {
    @apply text-xl font-semibold text-gray-900;
  }

  .quality-reports-modal-close {
    @apply w-8 h-8 bg-gray-100 text-gray-600 rounded-lg;
    @apply hover:bg-gray-200 transition-colors duration-200;
    @apply flex items-center justify-center;
  }

  .quality-reports-modal-body {
    @apply p-6;
  }

  .quality-reports-form {
    @apply space-y-4;
  }

  .quality-reports-form-group {
    @apply space-y-2;
  }

  .quality-reports-form-label {
    @apply flex flex-col gap-2;
  }

  .quality-reports-form-text {
    @apply text-sm font-medium text-gray-700;
  }

  .quality-reports-form-input {
    @apply w-full px-3 py-2 border border-gray-300 rounded-lg;
    @apply focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;
    @apply transition-colors duration-200;
  }

  .quality-reports-form-select {
    @apply w-full px-3 py-2 border border-gray-300 rounded-lg;
    @apply focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;
    @apply transition-colors duration-200;
  }

  .quality-reports-form-checkboxes {
    @apply grid grid-cols-2 gap-2;
  }

  .quality-reports-form-checkbox {
    @apply flex items-center gap-2;
  }

  .quality-reports-form-checkbox input[type="checkbox"] {
    @apply sr-only;
  }

  .quality-reports-form-checkbox-text {
    @apply text-sm text-gray-700;
  }

  .quality-reports-modal-footer {
    @apply flex items-center justify-end gap-3 p-6 border-t border-gray-200;
  }

  .quality-reports-modal-btn {
    @apply px-4 py-2 rounded-lg font-medium;
    @apply transition-colors duration-200;
  }

  .quality-reports-modal-btn-secondary {
    @apply bg-gray-100 text-gray-700 hover:bg-gray-200;
  }

  .quality-reports-modal-btn-primary {
    @apply bg-blue-600 text-white hover:bg-blue-700;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .quality-reports-header {
      @apply flex-col items-start gap-4;
    }
    
    .quality-reports-controls {
      @apply w-full justify-center;
    }
    
    .quality-reports-filters-grid {
      @apply grid-cols-1 gap-3;
    }
    
    .quality-reports-table-header {
      @apply grid-cols-1 gap-2;
    }
    
    .quality-reports-table-row {
      @apply grid-cols-1 gap-2;
    }
    
    .quality-reports-stats-grid {
      @apply grid-cols-2 gap-3;
    }
    
    .quality-reports-form-checkboxes {
      @apply grid-cols-1 gap-2;
    }
  }

  /* Modo oscuro */
  [data-theme="dark"] .quality-reports {
    @apply bg-gray-800 border border-gray-700;
  }

  [data-theme="dark"] .quality-reports-title {
    @apply text-gray-100;
  }

  [data-theme="dark"] .quality-reports-section-title {
    @apply text-gray-100;
  }

  [data-theme="dark"] .quality-reports-filter-text {
    @apply text-gray-300;
  }

  [data-theme="dark"] .quality-reports-filter-select {
    @apply bg-gray-700 border-gray-600 text-gray-100;
  }

  [data-theme="dark"] .quality-reports-filter-input {
    @apply bg-gray-700 border-gray-600 text-gray-100;
  }

  [data-theme="dark"] .quality-reports-table {
    @apply bg-gray-700;
  }

  [data-theme="dark"] .quality-reports-table-header {
    @apply bg-gray-600 text-gray-200;
  }

  [data-theme="dark"] .quality-reports-table-row {
    @apply bg-gray-800;
  }

  [data-theme="dark"] .quality-reports-table-cell:first-child {
    @apply text-gray-100;
  }

  [data-theme="dark"] .quality-reports-schedule-item {
    @apply bg-gray-700;
  }

  [data-theme="dark"] .quality-reports-schedule-name {
    @apply text-gray-100;
  }

  [data-theme="dark"] .quality-reports-schedule-details {
    @apply text-gray-400;
  }

  [data-theme="dark"] .quality-reports-stat-item {
    @apply bg-gray-700;
  }

  [data-theme="dark"] .quality-reports-stat-value {
    @apply text-gray-100;
  }

  [data-theme="dark"] .quality-reports-stat-label {
    @apply text-gray-400;
  }

  [data-theme="dark"] .quality-reports-modal-content {
    @apply bg-gray-800;
  }

  [data-theme="dark"] .quality-reports-modal-title {
    @apply text-gray-100;
  }

  [data-theme="dark"] .quality-reports-modal-close {
    @apply bg-gray-700 text-gray-300 hover:bg-gray-600;
  }

  [data-theme="dark"] .quality-reports-form-text {
    @apply text-gray-300;
  }

  [data-theme="dark"] .quality-reports-form-input {
    @apply bg-gray-700 border-gray-600 text-gray-100;
  }

  [data-theme="dark"] .quality-reports-form-select {
    @apply bg-gray-700 border-gray-600 text-gray-100;
  }

  [data-theme="dark"] .quality-reports-form-checkbox-text {
    @apply text-gray-300;
  }
</style>

<script>
  class QualityReports {
    constructor(element) {
      this.element = element;
      this.reports = [];
      this.scheduledReports = [];
      
      this.init();
    }
    
    init() {
      this.setupEventListeners();
      this.loadReports();
      this.loadScheduledReports();
      this.updateStats();
    }
    
    setupEventListeners() {
      // Botones de control
      document.getElementById('generate-report')?.addEventListener('click', () => {
        this.openReportModal();
      });
      
      document.getElementById('schedule-report')?.addEventListener('click', () => {
        this.openScheduleModal();
      });
      
      document.getElementById('export-reports')?.addEventListener('click', () => {
        this.exportReports();
      });
      
      // Filtros
      document.getElementById('apply-filters')?.addEventListener('click', () => {
        this.applyFilters();
      });
      
      // Modal
      document.getElementById('close-report-modal')?.addEventListener('click', () => {
        this.closeReportModal();
      });
      
      document.getElementById('cancel-report')?.addEventListener('click', () => {
        this.closeReportModal();
      });
      
      document.getElementById('generate-report-btn')?.addEventListener('click', () => {
        this.generateReport();
      });
      
      // Cerrar modal al hacer clic fuera
      document.getElementById('report-modal')?.addEventListener('click', (e) => {
        if (e.target === e.currentTarget) {
          this.closeReportModal();
        }
      });
    }
    
    loadReports() {
      // Cargar reportes desde localStorage
      try {
        const savedReports = localStorage.getItem('quality-reports');
        this.reports = savedReports ? JSON.parse(savedReports) : [];
      } catch (error) {
        console.error('Error loading reports:', error);
        this.reports = [];
      }
      
      this.renderReports();
    }
    
    renderReports() {
      const tbody = document.getElementById('reports-table-body');
      if (!tbody) return;
      
      if (this.reports.length === 0) {
        tbody.innerHTML = `
          <div class="text-center text-gray-500 py-8">
            <i class="fas fa-file-alt text-4xl mb-4"></i>
            <p>No hay reportes generados</p>
          </div>
        `;
        return;
      }
      
      tbody.innerHTML = this.reports.map(report => `
        <div class="quality-reports-table-row">
          <div class="quality-reports-table-cell">${report.name}</div>
          <div class="quality-reports-table-cell">${this.getReportTypeLabel(report.type)}</div>
          <div class="quality-reports-table-cell">${new Date(report.date).toLocaleDateString()}</div>
          <div class="quality-reports-table-cell">
            <span class="quality-reports-status ${report.status}">${this.getStatusLabel(report.status)}</span>
          </div>
          <div class="quality-reports-table-cell">${report.score || 'N/A'}</div>
          <div class="quality-reports-table-cell">
            <button class="quality-reports-table-action view" onclick="qualityReports.viewReport('${report.id}')">
              <i class="fas fa-eye"></i>
            </button>
            <button class="quality-reports-table-action download" onclick="qualityReports.downloadReport('${report.id}')">
              <i class="fas fa-download"></i>
            </button>
            <button class="quality-reports-table-action delete" onclick="qualityReports.deleteReport('${report.id}')">
              <i class="fas fa-trash"></i>
            </button>
          </div>
        </div>
      `).join('');
    }
    
    getReportTypeLabel(type) {
      const labels = {
        quality: 'Calidad',
        security: 'Seguridad',
        performance: 'Rendimiento',
        accessibility: 'Accesibilidad',
        seo: 'SEO',
        comprehensive: 'Exhaustivo'
      };
      return labels[type] || type;
    }
    
    getStatusLabel(status) {
      const labels = {
        completed: 'Completado',
        pending: 'Pendiente',
        failed: 'Fallido'
      };
      return labels[status] || status;
    }
    
    loadScheduledReports() {
      // Cargar reportes programados desde localStorage
      try {
        const savedScheduled = localStorage.getItem('quality-scheduled-reports');
        this.scheduledReports = savedScheduled ? JSON.parse(savedScheduled) : [];
      } catch (error) {
        console.error('Error loading scheduled reports:', error);
        this.scheduledReports = [];
      }
      
      this.renderScheduledReports();
    }
    
    renderScheduledReports() {
      const container = document.getElementById('scheduled-reports');
      if (!container) return;
      
      if (this.scheduledReports.length === 0) {
        container.innerHTML = `
          <div class="text-center text-gray-500 py-8">
            <i class="fas fa-clock text-4xl mb-4"></i>
            <p>No hay reportes programados</p>
          </div>
        `;
        return;
      }
      
      container.innerHTML = this.scheduledReports.map(scheduled => `
        <div class="quality-reports-schedule-item">
          <div class="quality-reports-schedule-info">
            <div class="quality-reports-schedule-name">${scheduled.name}</div>
            <div class="quality-reports-schedule-details">
              ${this.getReportTypeLabel(scheduled.type)} • ${scheduled.frequency} • ${scheduled.format.toUpperCase()}
            </div>
          </div>
          <div class="quality-reports-schedule-actions">
            <button class="quality-reports-schedule-btn edit" onclick="qualityReports.editScheduledReport('${scheduled.id}')">
              <i class="fas fa-edit"></i>
            </button>
            <button class="quality-reports-schedule-btn delete" onclick="qualityReports.deleteScheduledReport('${scheduled.id}')">
              <i class="fas fa-trash"></i>
            </button>
          </div>
        </div>
      `).join('');
    }
    
    updateStats() {
      const stats = {
        totalReports: this.reports.length,
        completedReports: this.reports.filter(r => r.status === 'completed').length,
        pendingReports: this.reports.filter(r => r.status === 'pending').length,
        failedReports: this.reports.filter(r => r.status === 'failed').length,
        scheduledReports: this.scheduledReports.length,
        averageScore: this.reports.length > 0 ? 
          Math.round(this.reports.reduce((sum, r) => sum + (r.score || 0), 0) / this.reports.length) : 0
      };
      
      document.getElementById('total-reports').textContent = stats.totalReports;
      document.getElementById('completed-reports').textContent = stats.completedReports;
      document.getElementById('pending-reports').textContent = stats.pendingReports;
      document.getElementById('failed-reports').textContent = stats.failedReports;
      document.getElementById('scheduled-reports-count').textContent = stats.scheduledReports;
      document.getElementById('average-score').textContent = stats.averageScore;
    }
    
    openReportModal() {
      document.getElementById('report-modal').classList.remove('hidden');
    }
    
    closeReportModal() {
      document.getElementById('report-modal').classList.add('hidden');
    }
    
    generateReport() {
      const name = document.getElementById('report-name').value;
      const type = document.getElementById('modal-report-type').value;
      const period = document.getElementById('modal-report-period').value;
      const format = document.getElementById('modal-report-format').value;
      const destination = document.getElementById('modal-report-destination').value;
      const email = document.getElementById('modal-report-email').value;
      
      if (!name) {
        alert('Por favor ingresa un nombre para el reporte');
        return;
      }
      
      const report = {
        id: Date.now().toString(),
        name,
        type,
        period,
        format,
        destination,
        email,
        date: new Date().toISOString(),
        status: 'pending',
        score: null
      };
      
      this.reports.unshift(report);
      this.saveReports();
      this.renderReports();
      this.updateStats();
      this.closeReportModal();
      
      // Simular generación de reporte
      setTimeout(() => {
        report.status = 'completed';
        report.score = Math.floor(Math.random() * 40) + 60; // 60-100
        this.saveReports();
        this.renderReports();
        this.updateStats();
      }, 2000);
    }
    
    viewReport(id) {
      const report = this.reports.find(r => r.id === id);
      if (!report) return;
      
      // Simular visualización de reporte
      console.log('Viewing report:', report);
    }
    
    downloadReport(id) {
      const report = this.reports.find(r => r.id === id);
      if (!report) return;
      
      // Simular descarga de reporte
      const reportData = {
        ...report,
        content: 'Contenido del reporte...'
      };
      
      const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      
      const a = document.createElement('a');
      a.href = url;
      a.download = `${report.name}.json`;
      a.click();
      
      URL.revokeObjectURL(url);
    }
    
    deleteReport(id) {
      if (confirm('¿Estás seguro de que quieres eliminar este reporte?')) {
        this.reports = this.reports.filter(r => r.id !== id);
        this.saveReports();
        this.renderReports();
        this.updateStats();
      }
    }
    
    editScheduledReport(id) {
      const scheduled = this.scheduledReports.find(s => s.id === id);
      if (!scheduled) return;
      
      // Simular edición de reporte programado
      console.log('Editing scheduled report:', scheduled);
    }
    
    deleteScheduledReport(id) {
      if (confirm('¿Estás seguro de que quieres eliminar este reporte programado?')) {
        this.scheduledReports = this.scheduledReports.filter(s => s.id !== id);
        this.saveScheduledReports();
        this.renderScheduledReports();
        this.updateStats();
      }
    }
    
    applyFilters() {
      const period = document.getElementById('report-period').value;
      const type = document.getElementById('report-type').value;
      const format = document.getElementById('report-format').value;
      const status = document.getElementById('report-status').value;
      const search = document.getElementById('report-search').value;
      
      // Aplicar filtros (simplificado)
      console.log('Applying filters:', { period, type, format, status, search });
    }
    
    exportReports() {
      const reportData = {
        reports: this.reports,
        scheduledReports: this.scheduledReports,
        exportDate: new Date().toISOString()
      };
      
      const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      
      const a = document.createElement('a');
      a.href = url;
      a.download = `quality-reports-${new Date().toISOString()}.json`;
      a.click();
      
      URL.revokeObjectURL(url);
    }
    
    saveReports() {
      localStorage.setItem('quality-reports', JSON.stringify(this.reports));
    }
    
    saveScheduledReports() {
      localStorage.setItem('quality-scheduled-reports', JSON.stringify(this.scheduledReports));
    }
  }
  
  // Inicializar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    const reportsElements = document.querySelectorAll('.quality-reports');
    reportsElements.forEach(element => {
      window.qualityReports = new QualityReports(element);
    });
  });
  
  // Exponer globalmente
  window.QualityReports = QualityReports;
</script>
