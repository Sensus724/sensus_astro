/* Sensus - Advanced Animations CSS */
/* Animaciones sofisticadas para una experiencia premium */

/* === VARIABLES DE ANIMACIÃ“N === */
:root {
  --animation-duration-fast: 0.2s;
  --animation-duration-normal: 0.4s;
  --animation-duration-slow: 0.8s;
  --animation-easing-smooth: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --animation-easing-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --animation-easing-elastic: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* === TYPING ANIMATION === */
.typing-animation {
  overflow: hidden;
  border-right: 2px solid var(--primary);
  white-space: nowrap;
  animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from, to {
    border-color: transparent;
  }
  50% {
    border-color: var(--primary);
  }
}

/* === FLOATING ELEMENTS === */
.floating {
  animation: floating 3s ease-in-out infinite;
}

.floating:nth-child(2) {
  animation-delay: 0.5s;
}

.floating:nth-child(3) {
  animation-delay: 1s;
}

@keyframes floating {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* === PARALLAX EFFECT === */
.parallax-container {
  overflow: hidden;
  position: relative;
}

.parallax-element {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  will-change: transform;
}

/* === GRADIENT OVERLAY ANIMATION === */
.gradient-overlay {
  position: relative;
  overflow: hidden;
}

.gradient-overlay::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    rgba(59, 130, 246, 0.1),
    rgba(147, 51, 234, 0.1),
    rgba(236, 72, 153, 0.1),
    rgba(59, 130, 246, 0.1)
  );
  background-size: 400% 400%;
  animation: gradient-shift 8s ease infinite;
  z-index: 1;
}

@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* === COUNTER ANIMATION === */
.counter {
  font-variant-numeric: tabular-nums;
  transition: all var(--animation-duration-normal) var(--animation-easing-smooth);
}

.counter.animate {
  animation: counter-pulse 0.6s var(--animation-easing-bounce);
}

@keyframes counter-pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

/* === PROGRESS BAR ANIMATION === */
.progress-bar {
  position: relative;
  width: 100%;
  height: 8px;
  background: var(--border-color);
  border-radius: var(--radius-full);
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, var(--primary), var(--primary-dark));
  border-radius: var(--radius-full);
  transition: width 1s var(--animation-easing-smooth);
  position: relative;
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-image: linear-gradient(
    -45deg,
    rgba(255, 255, 255, 0.2) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0.2) 75%,
    transparent 75%,
    transparent
  );
  background-size: 50px 50px;
  animation: progress-stripes 1s linear infinite;
}

@keyframes progress-stripes {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 0;
  }
}

/* === CARD REVEAL ANIMATION === */
.card-reveal {
  opacity: 0;
  transform: translateY(50px) scale(0.8);
  transition: all 0.8s var(--animation-easing-smooth);
}

.card-reveal.visible {
  opacity: 1;
  transform: translateY(0) scale(1);
}

/* === RIPPLE EFFECT === */
.ripple {
  position: relative;
  overflow: hidden;
}

.ripple::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.ripple:active::before {
  width: 300px;
  height: 300px;
}

/* === MORPHING SHAPES === */
.morphing-shape {
  width: 100px;
  height: 100px;
  background: var(--primary);
  border-radius: 50%;
  animation: morphing 4s ease-in-out infinite;
}

@keyframes morphing {
  0%, 100% {
    border-radius: 50%;
    transform: rotate(0deg);
  }
  25% {
    border-radius: 20%;
    transform: rotate(90deg);
  }
  50% {
    border-radius: 50%;
    transform: rotate(180deg);
  }
  75% {
    border-radius: 20%;
    transform: rotate(270deg);
  }
}

/* === TEXT REVEAL ANIMATION === */
.text-reveal {
  overflow: hidden;
  position: relative;
}

.text-reveal::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: var(--background);
  transform: translateX(-100%);
  transition: transform 0.8s var(--animation-easing-smooth);
  z-index: 1;
}

.text-reveal.visible::before {
  transform: translateX(100%);
}

/* === ICON ROTATION === */
.icon-rotate {
  transition: transform var(--animation-duration-normal) var(--animation-easing-smooth);
}

.icon-rotate:hover {
  transform: rotate(360deg);
}

/* === SCALE ON HOVER === */
.scale-hover {
  transition: transform var(--animation-duration-normal) var(--animation-easing-smooth);
}

.scale-hover:hover {
  transform: scale(1.05);
}

/* === SLIDE IN FROM SIDES === */
.slide-in-left {
  opacity: 0;
  transform: translateX(-100px);
  transition: all 0.8s var(--animation-easing-smooth);
}

.slide-in-left.visible {
  opacity: 1;
  transform: translateX(0);
}

.slide-in-right {
  opacity: 0;
  transform: translateX(100px);
  transition: all 0.8s var(--animation-easing-smooth);
}

.slide-in-right.visible {
  opacity: 1;
  transform: translateX(0);
}

/* === ZOOM IN ANIMATION === */
.zoom-in {
  opacity: 0;
  transform: scale(0.5);
  transition: all 0.8s var(--animation-easing-smooth);
}

.zoom-in.visible {
  opacity: 1;
  transform: scale(1);
}

/* === FLIP ANIMATION === */
.flip-card {
  perspective: 1000px;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: var(--radius-lg);
}

.flip-card-back {
  transform: rotateY(180deg);
}

/* === PULSE ANIMATION === */
.pulse-animation {
  animation: pulse-glow 2s ease-in-out infinite;
}

@keyframes pulse-glow {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

/* === WAVE ANIMATION === */
.wave {
  position: relative;
  overflow: hidden;
}

.wave::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 70%
  );
  transform: translateX(-100%);
  animation: wave-move 2s ease-in-out infinite;
}

@keyframes wave-move {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* === STAGGERED REVEAL === */
.staggered-reveal {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.6s var(--animation-easing-smooth);
}

.staggered-reveal.visible {
  opacity: 1;
  transform: translateY(0);
}

.staggered-reveal:nth-child(1) { transition-delay: 0.1s; }
.staggered-reveal:nth-child(2) { transition-delay: 0.2s; }
.staggered-reveal:nth-child(3) { transition-delay: 0.3s; }
.staggered-reveal:nth-child(4) { transition-delay: 0.4s; }
.staggered-reveal:nth-child(5) { transition-delay: 0.5s; }
.staggered-reveal:nth-child(6) { transition-delay: 0.6s; }

/* === RESPONSIVE ANIMATIONS === */
@media (max-width: 768px) {
  .floating {
    animation: none;
  }
  
  .parallax-element {
    background-attachment: scroll;
  }
  
  .flip-card:hover .flip-card-inner {
    transform: none;
  }
}

/* === REDUCED MOTION SUPPORT === */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
